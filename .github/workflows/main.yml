name: Build & publish

on:
  pull_request: { }
  push:
    branches:
      - main
    tags:
      - v*.*.*

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      is-release: ${{ steps.metadata.outputs.is-release }}
      publishable: ${{ steps.metadata.outputs.publishable }}
      version: ${{ steps.metadata.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup asdf-vm
        uses: equisoft-actions/with-asdf-vm@v1

      - name: Find application metadata
        id: metadata
        uses: equisoft-actions/application-metadata@v1

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup asdf-vm
        uses: equisoft-actions/with-asdf-vm@v1

      - name: Compile source and test code
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-version: wrapper
          arguments: "assemble"
          properties: |
            application.version=${{ needs.setup.outputs.version }}
            gpr.user=${{ secrets.GHCR_USER }}
            gpr.key=${{ secrets.GHCR_TOKEN }}

      - name: Upload JAR
        uses: actions/upload-artifact@v3
        if: ${{ success() }}
        with:
          name: mail-service-sdk-micronaut-${{ needs.setup.outputs.version }}.jar
          path: build/libs/mail-service-sdk-micronaut-${{ needs.setup.outputs.version }}.jar
          retention-days: 5
          if-no-files-found: error

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [setup, build]
    if: ${{ needs.setup.outputs.publishable == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup asdf-vm
        uses: equisoft-actions/with-asdf-vm@v1

      # Publish
      - name: Publish
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-version: wrapper
          arguments: "publish"
          properties: |
            application.version=${{ needs.setup.outputs.version }}
            gpr.user=${{ secrets.GHCR_USER }}
            gpr.key=${{ secrets.GHCR_TOKEN }}

#  notify:
#    name: Notify
#    runs-on: ubuntu-latest
#    needs: [setup, build, publish]
#    if: failure() && needs.setup.outputs.publishable == 'true'
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Find workflow status
#        id: workflow
#        shell: bash
#        run: |
#          STATUS=success
#          if [[ "${{ contains(needs.*.result, 'cancelled') }}" == "true" ]]; then
#            STATUS=cancelled
#          elif [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
#            STATUS=failure
#          fi
#
#          echo ::set-output name=status::$STATUS
#      - name: Post workflow status
#        uses: equisoft-actions/notify-workflow-status@v1
#        with:
#          slack-webhook-url: ${{ secrets.OPS_CI_WEBHOOK_URL }}
#          workflow-status: ${{ steps.workflow.outputs.status }}
